/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients 
{
    /// <summary>
    /// A sensor measuring water acidity, commonly called pH.
    /// Implements a client for the Acidity service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/acidity/" />
    public partial class AcidityClient : SensorClient
    {
        public AcidityClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.Acidity)
        {
        }

        /// <summary>
        /// Reads the <c>acidity</c> register value.
        /// The acidity, pH, of water., _: pH
        /// </summary>
        public float Acidity
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)AcidityReg.Acidity, AcidityRegPack.Acidity);
            }
        }

        /// <summary>
        /// Tries to read the <c>acidity_error</c> register value.
        /// Error on the acidity reading., _: pH
        /// </summary>
        bool TryGetAcidityError(out float value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)AcidityReg.AcidityError, AcidityRegPack.AcidityError, out values)) 
            {
                value = (float)values[0];
                return true;
            }
            else
            {
                value = default(float);
                return false;
            }
        }

        /// <summary>
        /// Tries to read the <c>min_acidity</c> register value.
        /// Lowest acidity that can be reported., _: pH
        /// </summary>
        bool TryGetMinAcidity(out float value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)AcidityReg.MinAcidity, AcidityRegPack.MinAcidity, out values)) 
            {
                value = (float)values[0];
                return true;
            }
            else
            {
                value = default(float);
                return false;
            }
        }

        /// <summary>
        /// Tries to read the <c>max_acidity</c> register value.
        /// Highest acidity that can be reported., _: pH
        /// </summary>
        bool TryGetMaxAcidity(out float value)
        {
            object[] values;
            if (this.TryGetRegisterValues((ushort)AcidityReg.MaxAcidity, AcidityRegPack.MaxAcidity, out values)) 
            {
                value = (float)values[0];
                return true;
            }
            else
            {
                value = default(float);
                return false;
            }
        }


    }
}